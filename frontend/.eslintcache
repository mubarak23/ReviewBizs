[{"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/App.js":"1","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/reportWebVitals.js":"2","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/HomeScreen.js":"3","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/index.js":"4","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Header.js":"5","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/business.js":"6","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Business.js":"7","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/store.js":"8","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Loader.js":"9","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/actions/businessActions.js":"10","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/reducers/businessReducers.js":"11","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/constants/businessConstant.js":"12","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/BusinessScreen.js":"13","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/Home.js":"14","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/BusinessScreens.js":"15","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/reducers/userReducer.js":"16","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/actions/userAction.js":"17","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/FormContainer.js":"18","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/constants/userConstant.js":"19","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/LoginScreen.js":"20","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Footer.js":"21","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/TestScreen.js":"22","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/ProfileScreen.js":"23","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Message.js":"24","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/UserListScreen.js":"25","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/BusinessListScreen.js":"26","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/BusinessEditScreen.js":"27"},{"size":1598,"mtime":1608385585816,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":1606760446467,"results":"30","hashOfConfig":"29"},{"size":1253,"mtime":1607854051234,"results":"31","hashOfConfig":"29"},{"size":597,"mtime":1607010933398,"results":"32","hashOfConfig":"29"},{"size":639,"mtime":1606891395326,"results":"33","hashOfConfig":"29"},{"size":1968,"mtime":1606943222733,"results":"34","hashOfConfig":"29"},{"size":715,"mtime":1607105298756,"results":"35","hashOfConfig":"29"},{"size":1430,"mtime":1608383542237,"results":"36","hashOfConfig":"29"},{"size":389,"mtime":1607096693207,"results":"37","hashOfConfig":"29"},{"size":4211,"mtime":1608285091966,"results":"38","hashOfConfig":"29"},{"size":3648,"mtime":1608384341077,"results":"39","hashOfConfig":"29"},{"size":1279,"mtime":1608285005282,"results":"40","hashOfConfig":"29"},{"size":1779,"mtime":1607601317784,"results":"41","hashOfConfig":"29"},{"size":890,"mtime":1607601816686,"results":"42","hashOfConfig":"29"},{"size":6192,"mtime":1608273318502,"results":"43","hashOfConfig":"29"},{"size":2427,"mtime":1608208671618,"results":"44","hashOfConfig":"29"},{"size":3809,"mtime":1608209039174,"results":"45","hashOfConfig":"29"},{"size":335,"mtime":1607249880816,"results":"46","hashOfConfig":"29"},{"size":1065,"mtime":1608207418644,"results":"47","hashOfConfig":"29"},{"size":2284,"mtime":1607603515185,"results":"48","hashOfConfig":"29"},{"size":319,"mtime":1606889052139,"results":"49","hashOfConfig":"29"},{"size":673,"mtime":1608273907490,"results":"50","hashOfConfig":"29"},{"size":5846,"mtime":1608134547758,"results":"51","hashOfConfig":"29"},{"size":244,"mtime":1607096742691,"results":"52","hashOfConfig":"29"},{"size":2907,"mtime":1608208735262,"results":"53","hashOfConfig":"29"},{"size":3259,"mtime":1608286666495,"results":"54","hashOfConfig":"29"},{"size":3894,"mtime":1608385068978,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"cajw1h",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":4,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/App.js",["125","126"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/reportWebVitals.js",[],["127","128"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/HomeScreen.js",["129"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Business from \"../components/Business\";\nimport Message from \"../components/Message.js\";\nimport Loader from \"../components/Loader.js\";\nimport { list_business, business_details } from \"../actions/businessActions.js\";\n//import businesses from \"../business\";\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n  const businessLists = useSelector((state) => state.businessList);\n  const { loading, error, businesses } = businessLists;\n  console.log(businesses);\n  useEffect(() => {\n    dispatch(list_business());\n    //dispatch(business_details(\"5fcf0fd5795f190fa34c362b\"));\n  }, [dispatch]);\n\n  return (\n    <>\n      <h3>Business Avaialable for review</h3>\n      {loading ? (\n        //<h2>Loading...</h2>\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {businesses.map((business) => (\n              <Col sm={12} md={6} lg={4} xl={3}>\n                <Business business={business} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/index.js",[],["130","131"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Header.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/business.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Business.js",["132"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/store.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Loader.js",[],["133","134"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/actions/businessActions.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/reducers/businessReducers.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/constants/businessConstant.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/BusinessScreen.js",["135","136","137","138","139"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../components/Message.js\";\nimport Loader from \"../components/Loader.js\";\nimport { business_details } from \"../actions/businessActions.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\n\nconst BusinessScreen = ({ history, match }) => {\n  const dispatch = useDispatch();\n  const businessDetail = useSelector((state) => state.businessDetails);\n  const { loading, error, business } = businessDetail;\n  console.log(business);\n  useEffect(() => {\n    console.log(\"this is the first point of dispatch\");\n    dispatch(business_details(match.params.id));\n    dispatch(business_details(\"5fcf0fd5795f190fa34c362b\"));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Link to=\"/\">Back</Link>\n\n      {loading ? (\n        //<h2>Loading...</h2>\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image src={business.image} alt={business.name} fluid />\n            </Col>\n            <Col md={6}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{business.name}</h3>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  Description: {business.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n\n              <h5>Customer Review Goes Here</h5>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default BusinessScreen;\n",["140","141"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/Home.js",["142","143","144"],"import React, { useEffect, useState } from \"react\";\nimport { business_details } from \"../actions/businessActions.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Home = ({ match, history }) => {\n  const dispatch = useDispatch();\n  const businessDetail = useSelector((state) => state.businessDetails);\n  const { loading, error, business } = businessDetail;\n  console.log(business);\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/user/login\");\n    }\n    console.log(\"this is the first point of dispatch\");\n    dispatch(business_details(match.params.id));\n    dispatch(business_details(\"5fcf0fd5795f190fa34c362b\"));\n  }, [dispatch, userInfo, match, history]);\n  return (\n    <div>\n      <h5>Home for testing useEffect</h5>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/BusinessScreens.js",["145"],"import React, { useEffect, useState } from \"react\";\nimport {\n  business_details,\n  createBusinessReview,\n} from \"../actions/businessActions.js\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Message from \"../components/Message.js\";\nimport Loader from \"../components/Loader.js\";\nimport Rating from \"../components/Rating.js\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport { CREATE_REVIEW_RESET } from \"../constants/businessConstant\";\n\nconst BusinessScreens = ({ match }) => {\n  const [rating, setRating] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const dispatch = useDispatch();\n  console.log(match.params.id);\n  const id = match.params.id;\n  const businessDetail = useSelector((state) => state.businessDetails);\n  const { loading, error, business } = businessDetail;\n  console.log(business);\n  const BusinessReviewCreate = useSelector((state) => state.createReview);\n  const {\n    success: successBusinessreview,\n    error: errorBusinessReview,\n    loading: loadingBusinessReview,\n  } = BusinessReviewCreate;\n  useEffect(() => {\n    if (successBusinessreview) {\n      alert(\"Review Submitted\");\n      setRating(0);\n      setComment(\"\");\n      setEmail(\"\");\n      setName(\"\");\n      dispatch({ type: CREATE_REVIEW_RESET });\n    }\n    //dispatch(business_details(\"5fcf0fd5795f190fa34c362b\"));\n    console.log(\"This is before dispatch is called\");\n    dispatch(business_details(id));\n    console.log(\"This is after dispatch is called\");\n  }, [dispatch, id, successBusinessreview]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(\"This is the first add review\");\n    const data = { name, email, rating, comment };\n    console.log(data);\n    dispatch(createBusinessReview(match.params.id, data));\n  };\n  return (\n    <>\n      <Link to=\"/\">Back</Link>\n\n      {loading ? (\n        //<h2>Loading...</h2>\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <>\n          <Row>\n            <Col md={6}>\n              <Image src={business.image} alt={business.name} fluid />\n            </Col>\n            <Col md={6}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h3>{business.name}</h3>\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  Description: {business.description}\n                </ListGroup.Item>\n                <ListGroup.Item>Category: {business.category}</ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {business.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant=\"flush\">\n                {business.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successBusinessreview && (\n                    <Message variant=\"success\">\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingBusinessReview && <Loader />}\n                  {errorBusinessReview && (\n                    <Message variant=\"danger\">{errorBusinessReview}</Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={6}>\n              <ListGroup>\n                <ListGroup.Item>\n                  <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"rating\">\n                      <Form.Label>Name</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                      ></Form.Control>\n                      <Form.Label>Email Address</Form.Label>\n                      <Form.Control\n                        type=\"email\"\n                        placeholder=\"Enter Email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                      ></Form.Control>\n                      <Form.Label>Rating</Form.Label>\n                      <Form.Control\n                        as=\"select\"\n                        value={rating}\n                        onChange={(e) => setRating(e.target.value)}\n                      >\n                        <option value=\"\">Select...</option>\n                        <option value=\"1\">1 - Poor</option>\n                        <option value=\"2\">2 - Fair</option>\n                        <option value=\"3\">3 - Good</option>\n                        <option value=\"4\">4 - Very Good</option>\n                        <option value=\"5\">5 - Excellent</option>\n                      </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"comment\">\n                      <Form.Label>Comment</Form.Label>\n                      <Form.Control\n                        as=\"textarea\"\n                        row=\"3\"\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                      ></Form.Control>\n                    </Form.Group>\n                    <Button\n                      disabled={loadingBusinessReview}\n                      type=\"submit\"\n                      variant=\"primary\"\n                    >\n                      Submit\n                    </Button>\n                  </Form>\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default BusinessScreens;\n","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/reducers/userReducer.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/actions/userAction.js",["146","147"],"import axios from \"axios\";\nimport {\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_PROFILE_REQUEST,\n  USER_PROFILE_SUCCESS,\n  USER_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_LISTS_REQUEST,\n  USER_LISTS_SCCESS,\n  USER_LISTS_FAIL,\n} from \"../constants/userConstant.js\";\n\nexport const auth_register = ({ name, email, password }) => async (\n  dispatch\n) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.get(\n      \"/api/user/\",\n      { name, email, password },\n      config\n    );\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response.message,\n    });\n  }\n};\n\nexport const auth_login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    console.log(\"Before Making Request\");\n    console.log(email);\n    const { data } = await axios.post(\n      \"http://localhost:5000/api/user/login\",\n      { email, password },\n      config\n    );\n    console.log(data);\n    console.log(\"it has reach this point\");\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUserProfile = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(\"/api/user/profile\", config);\n    console.log(data);\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.put(\"api/user/profile\", user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response.message,\n    });\n  }\n};\n\nexport const getUserLists = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LISTS_REQUEST,\n    });\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.get(\"/api/user/\", config);\n    console.log(data);\n    dispatch({\n      type: USER_LISTS_SCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LISTS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.response.message,\n    });\n  }\n};\n\nexport const deleteUser = () => async (dispatch) => {};\n",["148","149"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/FormContainer.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/constants/userConstant.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/LoginScreen.js",["150"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { auth_login, login } from \"../actions/userAction\";\n//import { userLoginReducer } from \"../reducers/userReducers.js\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(email);\n    console.log(password);\n    dispatch(auth_login(email, password));\n  };\n\n  return (\n    <FormContainer>\n      <h2>SignIn</h2>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Enter Email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Enter Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n        <Button type=\"submit\" variant=\"primary\">\n          SignIn\n        </Button>\n      </Form>\n      <Row className=\"py-3\">\n        <Col>\n          New Business?{\" \"}\n          <Link to={redirect ? `/register?redirect=${redirect}` : \"/register\"}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  );\n};\n\nexport default LoginScreen;\n","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Footer.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/TestScreen.js",["151","152","153"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/ProfileScreen.js",["154","155"],"import React, { useState, useEffect } from \"react\";\nimport { Table, Form, Button, Row, Col } from \"react-bootstrap\";\n//import { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getUserProfile, updateUserProfile } from \"../actions/userAction.js\";\nimport { getUserBusiness, createBusiness } from \"../actions/businessActions.js\";\n//import businesses from \"../../../backend/data/business\";\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userDetails = useSelector((state) => state.userProfile);\n  const { loading, error, user } = userDetails;\n  console.log(user);\n\n  const mybusiness = useSelector((state) => state.userbusiness);\n  const {\n    loading: loadingbusiness,\n    error: errorbusiness,\n    businesses,\n  } = mybusiness;\n\n  const userUpdateProfile = useSelector((state) => state.updateuserProfile);\n  const { success } = userUpdateProfile;\n\n  console.log(businesses);\n\n  const businessCreate = useSelector((state) => state.createBusiness);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    business: createdProduct,\n  } = businessCreate;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n    console.log(\"execution reach this level\");\n    dispatch(getUserProfile());\n    dispatch(getUserBusiness());\n    setName(user.name);\n    setEmail(user.email);\n    console.log(\"this is the point after dispatch is called\");\n  }, [userInfo, history, dispatch, successCreate, createdProduct]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    console.log(\"this is the first point of contact\");\n    if (password != confirmPassword) {\n      setMessage(\"Password does not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  const createBusinessHandler = (e) => {\n    e.preventDefault();\n    console.log(\"create business action called\");\n    dispatch(createBusiness());\n    console.log(\"Create Business Action executed\");\n  };\n\n  return (\n    <Row>\n      <Col md={4}>\n        <h2>User Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"name\"\n              placeholder=\"Enter name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password Address</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"confirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n      <Col md={8}>\n        <Row className=\"align-items-center\">\n          <Col>\n            <h2>My Business</h2>\n          </Col>\n          <Col className=\"text-right\">\n            <Button className=\"my-3\" onClick={createBusinessHandler}>\n              <i className=\"fas fa-plus\"></i> Add Business\n            </Button>\n          </Col>\n        </Row>\n        {loadingCreate && <Loader />}\n        {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n        {loadingbusiness ? (\n          <Loader />\n        ) : errorbusiness ? (\n          <Message variant=\"danger\">{errorbusiness}</Message>\n        ) : (\n          <Table striped bordered hover responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>CATEGORY</th>\n                <th>RATING</th>\n              </tr>\n            </thead>\n            <tbody>\n              {businesses &&\n                businesses.map((business) => (\n                  <tr key={business._id}>\n                    <td>\n                      <Link to={`/business/${business._id}`}>\n                        {business._id}\n                      </Link>\n                    </td>\n                    <td>{business.name}</td>\n                    <td>{business.category}</td>\n                    <td>{business.rating}</td>\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n};\n\nexport default ProfileScreen;\n","/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/components/Message.js",[],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/UserListScreen.js",[],["156","157"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/BusinessListScreen.js",["158","159"],"/Users/mubarakaminu/Documents/DeveloperSpace/ReviewBizs/frontend/src/screens/BusinessEditScreen.js",["160","161","162","163","164","165","166","167","168"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport FormContainer from \"../components/FormContainer\";\nimport { business_details, updateBusiness } from \"../actions/businessActions\";\nimport { UPDATE_BUSINESS_RESET } from \"../constants/businessConstant\";\n\nconst BusinessEditScreen = ({ history, match }) => {\n  const buusinessId = match.params.id;\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const businessDetail = useSelector((state) => state.businessDetails);\n  const { loading, error, business } = businessDetail;\n\n  const UpdateBusiness = useSelector((state) => state.UpdateBusiness);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = UpdateBusiness;\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: UPDATE_BUSINESS_RESET });\n      history.push(\"/admin/businesslist\");\n    }\n    if (!business.name || business._id !== businessId) {\n      dispatch(business_details(productId));\n    } else {\n      setName(business.name);\n      setCategory(business.category);\n      setImage(business.image);\n      setDescription(business.description);\n    }\n  }, [dispatch, business]);\n  return (\n    <>\n      <Link to=\"/admin/productlist\">Go Back</Link>\n      <FormContainer>\n        <h2>Edit Business</h2>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <form onSubmit={submitHandle}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={name}\n                placeholder=\"Enter Name\"\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"image\">\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter image url\"\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id=\"image-file\"\n                label=\"select Image\"\n                name=\"image\"\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n            <Form.Group controlId=\"category\">\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n\n              <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter description\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\">\n              Update User\n            </Button>\n          </form>\n        )}\n      </FormContainer>\n    </>\n  );\n};\n\nexport default BusinessEditScreen;\n",["169","170"],{"ruleId":"171","severity":1,"message":"172","line":7,"column":8,"nodeType":"173","messageId":"174","endLine":7,"endColumn":22},{"ruleId":"171","severity":1,"message":"175","line":16,"column":8,"nodeType":"173","messageId":"174","endLine":16,"endColumn":18},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"171","severity":1,"message":"180","line":7,"column":25,"nodeType":"173","messageId":"174","endLine":7,"endColumn":41},{"ruleId":"176","replacedBy":"181"},{"ruleId":"178","replacedBy":"182"},{"ruleId":"171","severity":1,"message":"183","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":18},{"ruleId":"176","replacedBy":"184"},{"ruleId":"178","replacedBy":"185"},{"ruleId":"171","severity":1,"message":"186","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"187","line":12,"column":3,"nodeType":"173","messageId":"174","endLine":12,"endColumn":7},{"ruleId":"171","severity":1,"message":"188","line":13,"column":3,"nodeType":"173","messageId":"174","endLine":13,"endColumn":9},{"ruleId":"171","severity":1,"message":"189","line":14,"column":3,"nodeType":"173","messageId":"174","endLine":14,"endColumn":7},{"ruleId":"190","severity":1,"message":"191","line":26,"column":6,"nodeType":"192","endLine":26,"endColumn":16,"suggestions":"193"},{"ruleId":"176","replacedBy":"194"},{"ruleId":"178","replacedBy":"195"},{"ruleId":"171","severity":1,"message":"186","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"196","line":8,"column":11,"nodeType":"173","messageId":"174","endLine":8,"endColumn":18},{"ruleId":"171","severity":1,"message":"197","line":8,"column":20,"nodeType":"173","messageId":"174","endLine":8,"endColumn":25},{"ruleId":"171","severity":1,"message":"187","line":16,"column":3,"nodeType":"173","messageId":"174","endLine":16,"endColumn":7},{"ruleId":"171","severity":1,"message":"198","line":5,"column":3,"nodeType":"173","messageId":"174","endLine":5,"endColumn":18},{"ruleId":"171","severity":1,"message":"199","line":11,"column":3,"nodeType":"173","messageId":"174","endLine":11,"endColumn":20},{"ruleId":"176","replacedBy":"200"},{"ruleId":"178","replacedBy":"201"},{"ruleId":"171","severity":1,"message":"202","line":8,"column":22,"nodeType":"173","messageId":"174","endLine":8,"endColumn":27},{"ruleId":"171","severity":1,"message":"186","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"196","line":8,"column":11,"nodeType":"173","messageId":"174","endLine":8,"endColumn":18},{"ruleId":"171","severity":1,"message":"197","line":8,"column":20,"nodeType":"173","messageId":"174","endLine":8,"endColumn":25},{"ruleId":"190","severity":1,"message":"203","line":56,"column":6,"nodeType":"192","endLine":56,"endColumn":66,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":61,"column":18,"nodeType":"207","messageId":"208","endLine":61,"endColumn":20},{"ruleId":"176","replacedBy":"209"},{"ruleId":"178","replacedBy":"210"},{"ruleId":"171","severity":1,"message":"189","line":5,"column":17,"nodeType":"173","messageId":"174","endLine":5,"endColumn":21},{"ruleId":"171","severity":1,"message":"211","line":9,"column":10,"nodeType":"173","messageId":"174","endLine":9,"endColumn":22},{"ruleId":"171","severity":1,"message":"212","line":5,"column":8,"nodeType":"173","messageId":"174","endLine":5,"endColumn":13},{"ruleId":"171","severity":1,"message":"213","line":9,"column":28,"nodeType":"173","messageId":"174","endLine":9,"endColumn":42},{"ruleId":"171","severity":1,"message":"214","line":13,"column":9,"nodeType":"173","messageId":"174","endLine":13,"endColumn":20},{"ruleId":"171","severity":1,"message":"215","line":18,"column":21,"nodeType":"173","messageId":"174","endLine":18,"endColumn":33},{"ruleId":"216","severity":2,"message":"217","line":35,"column":44,"nodeType":"173","messageId":"218","endLine":35,"endColumn":54},{"ruleId":"216","severity":2,"message":"219","line":36,"column":33,"nodeType":"173","messageId":"218","endLine":36,"endColumn":42},{"ruleId":"190","severity":1,"message":"220","line":43,"column":6,"nodeType":"192","endLine":43,"endColumn":26,"suggestions":"221"},{"ruleId":"216","severity":2,"message":"222","line":56,"column":27,"nodeType":"173","messageId":"218","endLine":56,"endColumn":39},{"ruleId":"216","severity":2,"message":"223","line":79,"column":27,"nodeType":"173","messageId":"218","endLine":79,"endColumn":44},{"ruleId":"176","replacedBy":"224"},{"ruleId":"178","replacedBy":"225"},"no-unused-vars","'BusinessScreen' is defined but never used.","Identifier","unusedVar","'TestScreen' is defined but never used.","no-native-reassign",["226"],"no-negated-in-lhs",["227"],"'business_details' is defined but never used.",["226"],["227"],"'businesses' is defined but never used.",["226"],["227"],"'useState' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["228"],["226"],["227"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'USER_LOGIN_FAIL' is defined but never used.","'USER_PROFILE_FAIL' is defined but never used.",["226"],["227"],"'login' is defined but never used.","React Hook useEffect has missing dependencies: 'user.email' and 'user.name'. Either include them or remove the dependency array.",["229"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["226"],["227"],"'getUserLists' is defined but never used.","'axios' is defined but never used.","'updateBusiness' is defined but never used.","'buusinessId' is assigned a value but never used.","'setUploading' is assigned a value but never used.","no-undef","'businessId' is not defined.","undef","'productId' is not defined.","React Hook useEffect has missing dependencies: 'history' and 'successUpdate'. Either include them or remove the dependency array.",["230"],"'submitHandle' is not defined.","'uploadFileHandler' is not defined.",["226"],["227"],"no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"237","text":"238"},"Update the dependencies array to be: [userInfo, history, dispatch, successCreate, createdProduct, user.name, user.email]",{"range":"239","text":"240"},"Update the dependencies array to be: [dispatch, business, successUpdate, history]",{"range":"241","text":"242"},[832,842],"[dispatch, match.params.id]",[1957,2017],"[userInfo, history, dispatch, successCreate, createdProduct, user.name, user.email]",[1608,1628],"[dispatch, business, successUpdate, history]"]